{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.19.5.34762",
      "templateHash": "15920766207601459194"
    }
  },
  "parameters": {
    "prefix": {
      "type": "string",
      "defaultValue": "ayuina0726a"
    },
    "region": {
      "type": "string",
      "defaultValue": "japaneast"
    },
    "aoaiRegion": {
      "type": "string",
      "defaultValue": "eastus"
    }
  },
  "variables": {
    "logAnalyticsName": "[format('{0}-laws', parameters('prefix'))]"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2022-10-01",
      "name": "[variables('logAnalyticsName')]",
      "location": "[parameters('region')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": 30,
        "features": {
          "enableLogAccessUsingOnlyResourcePermissions": true
        },
        "workspaceCapping": {
          "dailyQuotaGb": -1
        },
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled"
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "webapp",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "region": {
            "value": "[parameters('region')]"
          },
          "prefix": {
            "value": "[parameters('prefix')]"
          },
          "logAnalyticsName": {
            "value": "[variables('logAnalyticsName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.19.5.34762",
              "templateHash": "5203734396566210112"
            }
          },
          "parameters": {
            "prefix": {
              "type": "string"
            },
            "region": {
              "type": "string"
            },
            "logAnalyticsName": {
              "type": "string"
            }
          },
          "variables": {
            "appSvcName": "[format('{0}-web', parameters('prefix'))]",
            "appSvcPlanName": "[format('{0}-asp', parameters('prefix'))]",
            "appInsightsName": "[format('{0}-ai', variables('appSvcName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02",
              "name": "[variables('appInsightsName')]",
              "location": "[parameters('region')]",
              "kind": "web",
              "properties": {
                "Application_Type": "web",
                "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName'))]",
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
              }
            },
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2022-03-01",
              "name": "[variables('appSvcPlanName')]",
              "location": "[parameters('region')]",
              "sku": {
                "name": "S1",
                "capacity": 1
              }
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2022-03-01",
              "name": "[variables('appSvcName')]",
              "location": "[parameters('region')]",
              "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appSvcPlanName'))]",
                "clientAffinityEnabled": false,
                "siteConfig": {
                  "netFrameworkVersion": "v7.0",
                  "ftpsState": "Disabled",
                  "use32BitWorkerProcess": false
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appSvcPlanName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites/config",
              "apiVersion": "2022-03-01",
              "name": "[format('{0}/{1}', variables('appSvcName'), 'metadata')]",
              "properties": {
                "CURRENT_STACK": "dotnet"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('appSvcName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites/config",
              "apiVersion": "2022-03-01",
              "name": "[format('{0}/{1}', variables('appSvcName'), 'appsettings')]",
              "properties": {
                "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightsName')), '2020-02-02').InstrumentationKey]",
                "APPLICATIONINSIGHTS_CONNECTION_STRING": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightsName')), '2020-02-02').ConnectionString]",
                "ApplicationInsightsAgent_EXTENSION_VERSION": "~3",
                "XDT_MicrosoftApplicationInsights_Mode": "Recommended",
                "XDT_MicrosoftApplicationInsights_PreemptSdk": "1"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]",
                "[resourceId('Microsoft.Web/sites', variables('appSvcName'))]"
              ]
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "aoai",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "aoaiRegion": {
            "value": "[parameters('aoaiRegion')]"
          },
          "prefix": {
            "value": "[parameters('prefix')]"
          },
          "logAnalyticsName": {
            "value": "[variables('logAnalyticsName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.19.5.34762",
              "templateHash": "10122629013344688221"
            }
          },
          "parameters": {
            "prefix": {
              "type": "string"
            },
            "aoaiRegion": {
              "type": "string"
            },
            "logAnalyticsName": {
              "type": "string"
            }
          },
          "variables": {
            "aoaiName": "[format('{0}-{1}-aoai', parameters('prefix'), parameters('aoaiRegion'))]",
            "aoaiModelName": "gpt-35-turbo",
            "aoaiModelDeploy": "g35t",
            "aoaiModelVersion": "0613"
          },
          "resources": [
            {
              "type": "Microsoft.CognitiveServices/accounts",
              "apiVersion": "2023-05-01",
              "name": "[variables('aoaiName')]",
              "location": "[parameters('aoaiRegion')]",
              "sku": {
                "name": "S0"
              },
              "kind": "OpenAI",
              "properties": {
                "customSubDomainName": "[variables('aoaiName')]",
                "publicNetworkAccess": "Enabled"
              }
            },
            {
              "type": "Microsoft.CognitiveServices/accounts/deployments",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', variables('aoaiName'), variables('aoaiModelDeploy'))]",
              "sku": {
                "name": "Standard",
                "capacity": 10
              },
              "properties": {
                "model": {
                  "format": "OpenAI",
                  "name": "[variables('aoaiModelName')]",
                  "version": "[variables('aoaiModelVersion')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', variables('aoaiName'))]"
              ]
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.CognitiveServices/accounts/{0}', variables('aoaiName'))]",
              "name": "[format('{0}-diag', variables('aoaiName'))]",
              "properties": {
                "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName'))]",
                "logAnalyticsDestinationType": "Dedicated",
                "logs": [
                  {
                    "category": null,
                    "categoryGroup": "Audit",
                    "enabled": true
                  },
                  {
                    "category": null,
                    "categoryGroup": "allLogs",
                    "enabled": true
                  }
                ],
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true,
                    "timeGrain": null
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', variables('aoaiName'))]"
              ]
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "cosmos",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "region": {
            "value": "[parameters('region')]"
          },
          "prefix": {
            "value": "[parameters('prefix')]"
          },
          "logAnalyticsName": {
            "value": "[variables('logAnalyticsName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.19.5.34762",
              "templateHash": "15237282321534824123"
            }
          },
          "parameters": {
            "prefix": {
              "type": "string"
            },
            "region": {
              "type": "string"
            },
            "logAnalyticsName": {
              "type": "string"
            }
          },
          "variables": {
            "cosmosAccountName": "[format('{0}-cosmos', parameters('prefix'))]",
            "cosmosDatabaseName": "Database1",
            "cosmosContainerName": "Container1"
          },
          "resources": [
            {
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
              "apiVersion": "2023-04-15",
              "name": "[format('{0}/{1}/{2}', variables('cosmosAccountName'), variables('cosmosDatabaseName'), variables('cosmosContainerName'))]",
              "properties": {
                "resource": {
                  "id": "[variables('cosmosContainerName')]",
                  "partitionKey": {
                    "paths": [
                      "/userid"
                    ],
                    "kind": "Hash"
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmosAccountName'), variables('cosmosDatabaseName'))]"
              ]
            },
            {
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
              "apiVersion": "2023-04-15",
              "name": "[format('{0}/{1}', variables('cosmosAccountName'), variables('cosmosDatabaseName'))]",
              "properties": {
                "resource": {
                  "id": "[variables('cosmosDatabaseName')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.DocumentDB/databaseAccounts",
              "apiVersion": "2023-04-15",
              "name": "[variables('cosmosAccountName')]",
              "location": "[parameters('region')]",
              "kind": "GlobalDocumentDB",
              "properties": {
                "databaseAccountOfferType": "Standard",
                "consistencyPolicy": {
                  "defaultConsistencyLevel": "Session"
                },
                "locations": [
                  {
                    "locationName": "[parameters('region')]",
                    "failoverPriority": 0,
                    "isZoneRedundant": false
                  }
                ]
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "apim",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "region": {
            "value": "[parameters('region')]"
          },
          "prefix": {
            "value": "[parameters('prefix')]"
          },
          "logAnalyticsName": {
            "value": "[variables('logAnalyticsName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.19.5.34762",
              "templateHash": "14785637052005464933"
            }
          },
          "parameters": {
            "prefix": {
              "type": "string"
            },
            "region": {
              "type": "string"
            },
            "logAnalyticsName": {
              "type": "string"
            }
          },
          "variables": {
            "apimName": "[format('{0}-apim', parameters('prefix'))]",
            "appInsightsName": "[format('{0}-ai', variables('apimName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.ApiManagement/service/loggers",
              "apiVersion": "2023-03-01-preview",
              "name": "[format('{0}/{1}', variables('apimName'), format('{0}-logger', variables('appInsightsName')))]",
              "properties": {
                "loggerType": "applicationInsights",
                "resourceId": "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]",
                "credentials": {
                  "instrumentationKey": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightsName')), '2020-02-02').InstrumentationKey]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', variables('apimName'))]",
                "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]"
              ]
            },
            {
              "type": "Microsoft.ApiManagement/service/diagnostics",
              "apiVersion": "2023-03-01-preview",
              "name": "[format('{0}/{1}', variables('apimName'), 'applicationinsights')]",
              "properties": {
                "loggerId": "[resourceId('Microsoft.ApiManagement/service/loggers', variables('apimName'), format('{0}-logger', variables('appInsightsName')))]",
                "alwaysLog": "allErrors",
                "logClientIp": true,
                "verbosity": "verbose"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/loggers', variables('apimName'), format('{0}-logger', variables('appInsightsName')))]",
                "[resourceId('Microsoft.ApiManagement/service', variables('apimName'))]"
              ]
            },
            {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02",
              "name": "[variables('appInsightsName')]",
              "location": "[parameters('region')]",
              "kind": "web",
              "properties": {
                "Application_Type": "web",
                "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName'))]",
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
              }
            },
            {
              "type": "Microsoft.ApiManagement/service",
              "apiVersion": "2023-03-01-preview",
              "name": "[variables('apimName')]",
              "location": "[parameters('region')]",
              "sku": {
                "name": "Developer",
                "capacity": 1
              },
              "properties": {
                "publisherName": "[parameters('prefix')]",
                "publisherEmail": "[format('{0}@{1}.local', parameters('prefix'), parameters('prefix'))]"
              }
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.ApiManagement/service/{0}', variables('apimName'))]",
              "name": "[format('{0}-diag', variables('apimName'))]",
              "properties": {
                "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName'))]",
                "logAnalyticsDestinationType": "Dedicated",
                "logs": [
                  {
                    "category": "GatewayLogs",
                    "enabled": true
                  },
                  {
                    "category": "WebSocketConnectionLogs",
                    "enabled": true
                  }
                ],
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', variables('apimName'))]"
              ]
            }
          ]
        }
      }
    }
  ]
}